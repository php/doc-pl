<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b905b4cdeda10cc147107ef615f2d83ede7a7f24 Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<reference xml:id="class.typeerror" role="exception" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>TypeError</title>
 <titleabbrev>TypeError</titleabbrev>
 
 <partintro>
 
<!-- {{{ Error intro -->
  <section xml:id="typeerror.intro">
   &reftitle.intro;
   <para>
    Zachodzą trzy scenariusze, w których może zostać rzucony
    <ooclass><classname>TypeError</classname></ooclass>. Pierwszy to
    typ parametru przekazanego do funkcji niezgodny z zadeklarowanym
    typem dla tego parametru. Drugi ma miejsce gdy typ zwracany
    przez funkcję nie pasuje do zadeklarowanego typu zwracanego przez
    funkcję. Trzecia możliwość to przekazanie nieprawidłowej liczby
    argumentów do wbudowanej funkcji PHP (tylko w trybie ścisłym).

    <classname>TypeError</classname> może zostać rzucony gdy:
    <simplelist>
     <member>
      Wartość ustawiana dla właściwości klasy nie zgadza się z typem danych
      zadeklarowanym dla tej właściwości
     </member>
     <member>
      Wartość ustawiana dla argumentu funkcji nie zgadza się z typem danych
      zadeklarowanym dla tego argumentu.
     </member>
     <member>
      Wartość zwracana przez funkcję nie zgadza się z zadeklarowanym typem
      zwracanym przez tę funkcję.
     </member>
    </simplelist>
  </para>
  </section>
<!-- }}} -->
 
  <section xml:id="typeerror.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooexception>
     <exceptionname>TypeError</exceptionname>
    </ooexception>

    <ooclass>
     <modifier>extends</modifier>
     <classname>Error</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:partintro/db:section/db:classsynopsis/db:fieldsynopsis[preceding-sibling::db:classsynopsisinfo[1][@role='comment' and text()='&Properties;']]))">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='Error'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.error')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='Error'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>

   <!-- }}} -->
 
  </section>

  <section xml:id="typeerror.changelog" role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.1.0</entry>
       <entry>
        W trybie ścisłym (strict mode) przekazanie niepoprawnej ilości argumentów do wbudowanej
        funkcji PHP nie skutkuje już ogólnym <classname>TypeError</classname>.
        Zamiast tego rzucany jest bardziej szczegółowy <classname>ArgumentCountError</classname>, który
        rozszerza <classname>TypeError</classname>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>

 </partintro>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
