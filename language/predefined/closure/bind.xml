<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9c74079f12d67cabb52c124d761f48275417d7eb Maintainer: grzesiek Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="closure.bind" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Closure::bind</refname>
  <refpurpose>
   Duplikuje domknięcie z określonym powiązanym obiektem i zakresem klasy
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Closure">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>Closure</type><type>null</type></type><methodname>Closure::bind</methodname>
   <methodparam><type>Closure</type><parameter>closure</parameter></methodparam>
   <methodparam><type class="union"><type>object</type><type>null</type></type><parameter>newThis</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>object</type><type>string</type><type>null</type></type><parameter>newScope</parameter><initializer>"static"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ta metoda jest statyczną wersją metody <methodname>Closure::bindTo</methodname>.
   Więcej informacji można znaleźć w dokumentacji tej metody.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>closure</parameter></term>
    <listitem>
     <para>
      Funkcje anonimowe do powiązania.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>newThis</parameter></term>
    <listitem>
     <para>
      Obiekt, z którym dana funkcja anonimowa powinna być powiązana lub
      &null;, aby domknięcie nie było powiązane.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>newScope</parameter></term>
    <listitem>
     <para>
      Zakres klasy, z którą ma być powiązane domknięcie lub
      'static', aby zachować bieżący. Jeśli podano obiekt,
      zamiast tego zostanie użyty typ obiektu. Określa to widoczność chronionych
      i prywatnych metod powiązanego obiektu.
      Niedozwolone jest przekazywanie (obiektu) klasy wewnętrznej jako tego parametru.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca nowy obiekt <classname>Closure</classname> object lub &null; przy niepowodzeniu.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Przykład <function>Closure::bind</function></title>
   <programlisting role="php">
<![CDATA[
<?php
class A {
    private static $sfoo = 1;
    private $ifoo = 2;
}
$cl1 = static function() {
    return A::$sfoo;
};
$cl2 = function() {
    return $this->ifoo;
};

$bcl1 = Closure::bind($cl1, null, 'A');
$bcl2 = Closure::bind($cl2, new A(), 'A');
echo $bcl1(), "\n";
echo $bcl2(), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
1
2
]]>
   </screen>
  </example>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><link linkend="functions.anonymous">Funkcje anonimowe</link></member>
   <member><methodname>Closure::bindTo</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
