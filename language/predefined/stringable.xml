<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9eb4a46bba05da229be4c8f7a3cb64702e1a2f95 Maintainer: cyb0org Status: ready -->
<!-- $Revision$ -->
<phpdoc:classref xml:id="class.stringable" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Interfejs Stringable</title>
 <titleabbrev>Stringable</titleabbrev>

 <partintro>

<!-- {{{ Stringable intro -->
  <section xml:id="stringable.intro">
   &reftitle.intro;
   <para>
    Interfejs <interfacename>Stringable</interfacename> oznacza daną klasę jako posiadającą metodę
    <link linkend="object.tostring">__toString()</link>. W odróżnieniu od większości interfejsów,
    <interfacename>Stringable</interfacename> jest domyślnie obecny w każdej klasie, która
    posiada zdefiniowaną magiczną metodę <link linkend="object.tostring">__toString()</link>,
    mimo to może, a nawet powinien być on zadeklarowany wprost.
   </para>
   <para>
    Jego główną wartością jest umożliwienie funkcjom sprawdzenie typu względem połączenia typów
    <literal>string|Stringable</literal> aby zaakceptować typ ciągu znaków lub obiekt,
    który może być rzutowany na ciąg znaków.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="stringable.synopsis">
   &reftitle.interfacesynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="interface">
    <oointerface>
     <interfacename>Stringable</interfacename>
    </oointerface>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.stringable')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='Stringable'])">
      <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="stringable.examples">
   <title>Przykłady Stringable</title>
   <para>
    <example xml:id="stringable.basic-example">
     <title>Podstawowe użycie Stringable</title>
     <programlisting role="php">
<![CDATA[
<?php
class IPv4Address implements Stringable {
    private string $oct1;
    private string $oct2;
    private string $oct3;
    private string $oct4;

    public function __construct(string $oct1, string $oct2, string $oct3, string $oct4) {
        $this->oct1 = $oct1;
        $this->oct2 = $oct2;
        $this->oct3 = $oct3;
        $this->oct4 = $oct4;
    }

    public function __toString(): string {
        return "$this->oct1.$this->oct2.$this->oct3.$this->oct4";
    }
}

function showStuff(string|Stringable $value) {
    // Stringable zostanie tutaj skonwertowane do ciągu znaków
    // poprzez wywołanie __toString.
    print $value;
}

$ip = new IPv4Address('123', '234', '42', '9');

showStuff($ip);
?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
123.234.42.9
]]>
     </screen>
    </example>
   </para>
  </section>

 </partintro>

 &language.predefined.stringable.tostring;
</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
