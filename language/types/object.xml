<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e587d0655e426f97b3fcb431453da5030e743b23 Maintainer: sobak Status: ready -->
<sect1 xml:id="language.types.object">
 <title>Obiekty</title>

 <sect2 xml:id="language.types.object.init">
  <title>Inicjalizacja obiektów</title>

  <para>
   Aby stworzyć nowy obiekt użyj wyrażenia <literal>new</literal>
   do zainstancjonowania klasy:
  </para>

  <example>
   <title>Tworzenie obiektów</title>
   <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function do_foo()
    {
        echo "Doing foo."; 
    }
}

$bar = new foo;
$bar->do_foo();
?>
]]>
   </programlisting>
  </example>

  <simpara>
   Dla pełnego opisu zapoznaj się z
   rozdziałem <link linkend="language.oop5">Klasy i obiekty</link>.
  </simpara>

 </sect2>
 
 <sect2 xml:id="language.types.object.casting">
  <title>Konwersja na obiekt</title>
  
  <para>
   Jeżeli typ <type>object</type> jest konwertowany na <type>object</type>, to nie jest
   on modyfikowany. Jeśli wartość dowolnego innego typu jest konwertowana na
   <type>object</type>, tworzona jest nowa instancja wbudowanej klasy
   <classname>stdClass</classname>. Jeśli wartością było &null;, to nowa instancja
   będzie pusta. Tablica (<type>array</type>) jest konwertowana na obiekt z właściwościami
   nazwanymi kluczami tablicy i ich odpowiadającymi wartościami. Zwróć uwagę, że w takim wypadku przed PHP 7.2.0 klucze
   numeryczne były niedostępne, chyba że po nich iterowano.
  </para>

  <example>
   <title>Rzutowanie na obiekt</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(isset($obj->{'1'})); // wyświetla 'bool(true)'

// Przestarzałe od PHP 8.1
var_dump(key($obj)); // wyświetla 'string(1) "1"'
?>
]]>
   </programlisting>
  </example>

  <para>
   Dla każdej innej wartości właściwość o nazwie <literal>scalar</literal> będize zawierała
   tę wartość.
  </para>

  <example>
   <title>Rzutowanie przy pomocy <literal>(object)</literal></title>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // wyświetla 'ciao'
?>
]]>
   </programlisting>
  </example>

 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
