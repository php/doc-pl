<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: edc3471f8384a8cbc50d998dd643313f37aba0e8 Maintainer: sobak Status: ready -->
<!-- $Revision$ -->

 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Lista zarezerwowanych słów</title>
  <para>
   Jest to lista predefiniowanych identyfikatorów w PHP. Żaden z
   identyfikatorów tutaj wymienionych nie powinien zostać użyty jako identyfikator w żadnym z
   Twoich skryptów, o ile wprost nie zaznaczono inaczej. Ta lista zawiera prefedniowane słowa kluczowe,
   zmienne, stałe i nazwy klas. Lista ta nie jest wyczerpująca ani kompletna.
  </para>

  <sect1 xml:id="reserved.keywords">
  <title>Lista słów kluczowych</title>
   <simpara>
    Te słowa mają specjalne znaczenie w PHP. Niektóre z nich reprezentują rzeczy, 
    które wyglądają jak funkcje, niektóre wyglądają jak stałe i tak dalej, ale 
    nie są nimi, naprawdę: są konstrukcjami języka. Nie możesz użyć żadnego
    z poniższych słów jako nazwy stałej, klasy, funkcji lub metody. 
    Używanie ich jako nazw zmiennych jest raczej w porządku, ale może powodować pomyłki.
   </simpara>
   <simpara>
    Od PHP 7.0.0 słowa te są dozwolone jako nazwy właściwości, stałych,
    metod klas, interfejsów i traitów, z wyjątkiem słowa
    <literal>class</literal>, które nie może być użyte jako nazwa stałej.
   </simpara>

   <table>
    <title>Słowa kluczowe PHP</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <function>__halt_compiler</function>
       </entry>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
       <entry>
        <link linkend="language.types.callable">callable</link> (od PHP 5.4)
       </entry>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.class">class</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.cloning">clone</link>
       </entry>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.extends">extends</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.final">final</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">finally</link> (od PHP 5.5)
       </entry>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.goto">goto</link> (od PHP 5.3)
       </entry>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link>
       </entry>
       <entry>
        <function>include</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits.conflict">insteadof</link> (od PHP 5.4)
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <link linkend="language.namespaces">namespace</link> (od PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.oop5.basic.new">new</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <function>print</function>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.visibility">private</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">protected</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link>
       </entry>
       <entry>
        <function>require</function>
       </entry>
       <entry>
        <function>require_once</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits">trait</link> (od PHP 5.4)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.exceptions">try</link>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="language.oop5.properties">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
       <entry>
        <link linkend="language.generators">yield</link> (od PHP 5.5)
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   
   <table>
    <title>Stałe czasu kompilacji</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry> 
        <link linkend="language.constants.predefined">__DIR__</link> (od PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces.nsconstants">__NAMESPACE__</link> (od PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__TRAIT__</link> (od PHP 5.4)
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>Predefiniowane klasy</title>
   <para>
    Ta sekcja wymienia standardowo predefiniowane klasy. Różne rozszerzenia
    definiują inne klasy, które są opisane w ich dokumentacji.
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>Standardowo definiowane klasy</title>

    <simpara>
     Te klasy są zdefiniowane w standarowym zestawie funkcji dołączonych do
     buildu PHP.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        Tworzone przez <function>dir</function>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        Tworzone przez <link linkend="language.types.object.casting">rzutowanie
        na obiekt</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        Może być stworzona przez <function>unserialize</function>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
   
   <sect2 xml:id="reserved.classes.php5">
    <title>Predefiniowane klasy od PHP 5</title>
    
    <simpara>
     Te dodatkowe predefiniowane klasy zostały wprowadzone w 
     PHP 5.0.0.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>Exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ErrorException</classname></term>
      <listitem>
       <simpara>
        Dostępna od PHP 5.1.0.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.closure">
    <title>Closure</title>
    
    <simpara>
     Predefiniowana finalna klasa <classname>Closure</classname> została wprowadzona
     w PHP 5.3.0. Jest używana do reprezentacji <link
     linkend="functions.anonymous">funkcji anonimowych</link>.
    </simpara>
    <simpara>
     Aby dowiedzieć się więcej, zobacz <link linkend="class.closure">stronę
     tej klasy</link>.
    </simpara>
   </sect2>

   <sect2 xml:id="reserved.classes.generator">
    <title>Generator</title>
    
    <simpara>
     Predefiniowana finalna klasa <classname>Generator</classname> została wprowadzona
     w PHP 5.5.0. Jest używana do reprezentacji <link
     linkend="language.generators">generatorów</link>.
    </simpara>
    <simpara>
     Aby dowiedzieć się więcej, zobacz <link linkend="class.generator">stronę
     tej klasy</link>.
    </simpara>
   </sect2>

   <sect2 xml:id="reserved.classes.php7">
    <title>Predefiniowane interfejsy i klasy od PHP 7</title>

    <simpara>
     Niżej wymienione dodatkowe klasy i interfejsy zostały wprowadzone w
     PHP 7.0.0.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>ArithmeticError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>AssertionError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>DivisionByZeroError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Error</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Throwable</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ParseError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>TypeError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.special">
    <title>Klasy specjalne</title>
    
    <simpara>
     Poniższe identyfikatory nie mogą zostać użyte jako nazwa klasy, gdyż mają
     specjalne zastosowanie.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Obecna
        klasa</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">Obecna klasa w
        czasie uruchamiania</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Klasa
        rodzica</link>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>
  &appendices.reserved.constants;
  <sect1 xml:id="reserved.other-reserved-words">
   <title>Lista innych zarezerwowanych słów</title>
   <simpara>
    Te słowa nie mogą zostać użyte jako nazwa klasy, interfejsu lub traita. 
    Ich użycie jest także zabronione w przestrzeniach nazw.
   </simpara>
   <para>
    <table>
     <title>Zarezerwowane słowa</title>
     <tgroup cols="5">
      <tbody>
       <row>
        <entry>
         int (od PHP 7)
        </entry>
        <entry>
         float (od PHP 7)
        </entry>
        <entry>
         bool (od PHP 7)
        </entry>
        <entry>
         string (od PHP 7)
        </entry>
       </row>
       <row>
        <entry>
         true (od PHP 7)
        </entry>
        <entry>
         false (od PHP 7)
        </entry>
        <entry>
         null (od PHP 7)
        </entry>
        <entry>
         void (od PHP 7.1)
        </entry>
       </row>
       <row>
        <entry>
         iterable (od PHP 7.1)
        </entry>
        <entry>
         object (od PHP 7.2)
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Poniższa lista zawiera słowa zarezerwowane w sposób "miękki". Wciąż mogą one
    być używane jako nazwy klas, interfejsów czy traitów (tak samo w przestrzeniach
    nazw), ale ich użycie jest wysoce niezalecane, ponieważ mogą one zostać zarezerwowane
    w przyszłych wersjach PHP.
   </para>
   <para>
    <table>
     <title>Słowa zarezerwowane w sposób "miękki"</title>
     <tgroup cols="5">
      <tbody>
       <row>
        <entry>
         resource (od PHP 7)
        </entry>
        <entry>
         mixed (od PHP 7)
        </entry>
        <entry>
         numeric (od PHP 7)
        </entry>
        <entry>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
