<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bb6247b68128cab1b166b49a3a73a87f40333267 Maintainer: adi Status: ready -->
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fwrite">
 <refnamediv>
  <refname>fwrite</refname>
  <refpurpose>Zapis pliku binarnie bezpieczny</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>fwrite</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fwrite</function> zapisuje zawartość parametru
   <parameter>data</parameter> do strumienia pliku wskazanego przez
   <parameter>stream</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Łańcuch znaków, który ma być zapisany.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Jeśli argument <parameter>length</parameter> jest typu &integer;, zapisywanie
       zakończy się po zapisaniu <parameter>length</parameter> bajtów lub
       gdy osiągnięty zostanie koniec łańcucha <parameter>data</parameter>, cokolwiek zdarzy się pierwsze.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   <function>fwrite</function> zwraca liczbę zapisanych
   bajtów, &return.falseforfailure;.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>fwrite</function> zgłasza błąd <constant>E_WARNING</constant> w wypadku niepowodzenia.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> dopuszcza teraz wartość null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Prosty przykład użycia <function>fwrite</function></title>
    <programlisting role="php">
     <![CDATA[
<?php
$plik = 'test.txt';
$tresc = "Dodaj to do pliku\n";

// Najpierw upewnijmy się, że plik istnieje i że możemy do niego zapisywać.
if (is_writable($filename)) {

    // W naszym przykładzie otwieramy $plik w trybie dopisywania.
    // Wskaźnik pliku znajduje się na jego końcu dlatego
    // właśnie tam znajdzie się $tresc kiedy użyjemy na niej fwrite()
    if (!$fp = fopen($filename, 'a')) {
         echo "Nie można otworzyć pliku ($plik)";
         exit;
    }

    // Zapiszmy $tresc do naszego otwartego pliku.
    if (fwrite($fp, $somecontent) === FALSE) {
        echo "Nie można zapisać do pliku ($plik)";
        exit;
    }

    echo "Udało się, zapisano ($tresc) do pliku ($plik)";

    fclose($fp);

} else {
    echo "Plik $plik nie jest zapisywalny";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Zapisywanie do strumienia sieciowego może zakończyć się, zanim cały ciąg znaków zostanie zapisany.
    Możemy sprawdzić wartość zwracaną przez <function>fwrite</function>:
    <programlisting role="php">
     <![CDATA[
<?php
function fwrite_stream($fp, $string) {
    for ($zapisano = 0; $zapisano < strlen($string); $zapisano += $fwrite) {
        $fwrite = fwrite($fp, substr($string, $zapisano));
        if ($fwrite === false) {
            return $zapisano;
        }
    }
    return $zapisano;
}
?>
]]>
    </programlisting>
   </para>
  </note>

  <note>
   <para>
    W systemach, które rozróżniają pliki na binarne i tekstowe
    (np. Windows) plik musi zostać otworzony z 'b' zawartym w
    parametrze tryb funkcji <function>fopen</function>.
   </para>
  </note>
  <note>
   <para>
    Jeśli <parameter>uchwyt</parameter> został utworzony za pomocą <function>fopen</function> w
    trybie dopisywania, zapis do pliku jest niepodzielny (chyba, że rozmiar
    łańcucha <parameter>data</parameter> przekracza blok systemu plików, na niektórych
    platformach, przy założeniu, że plik jest na lokalnym systemie plików). Jeśli tak,
    to nie ma potrzeby blokowania zasobu przy użyciu <function>flock</function> przed wywołaniem
    <function>fwrite</function>; wszystkie dane zostaną zapisane bez
    przerywania.
   </para>
  </note>
  <note>
   <para>
    Jeśli, zapiszemy dwukrotnie do wskaźnika pliku, dane zostaną dołączone na
    końcu treści pliku:
    <programlisting role="php">
     <![CDATA[
<?php
$fp = fopen('data.txt', 'w');
fwrite($fp, '1');
fwrite($fp, '23');
fclose($fp);

// zawartość 'data.txt' to teraz 123 a nie 23!
?>
]]>
    </programlisting>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fread</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
