<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 674b07e333461d4cf961bdc075da7a455c42df8c Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.func-get-arg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>func_get_arg</refname>
  <refpurpose>Zwraca element z listy argumentów</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>func_get_arg</methodname>
   <methodparam><type>int</type><parameter>arg_num</parameter></methodparam>
  </methodsynopsis>
  <para>
   Pobiera podany element z listy argumentów funkcji zdefiniowanej przez użytkownika.
  </para>
  <para>
   Ta funkcja może być użyta w połączeniu z 
   <function>func_get_args</function> i <function>func_num_args</function>,
   aby funkcje zdefiniowane przez użytkownika mogły przyjmować zmienną ilość
   argumentów.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>arg_num</parameter></term>
     <listitem>
      <para>
       Pozycja argumentu. Argumenty funkcji są liczone poczynając od zera.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca określony argument lub &false; w wypadku błędu.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
	    Ta funkcja może być teraz użyta w listach parametrów.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
	    Jeśli ta funkcja jest wywoływana z najbardziej zewnętrznego zasięgu
		pliku dołączonego przez wywołanie <function>include</function>
		lub <function>require</function> wewnątrz funkcji w wykonującym
		pliku, generuje teraz ostrzeżenie i zwraca &false;
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Generuje ostrzeżenie jeżeli wywołanie nastąpiło z zewnątrz funkcji zdefiniowanej
   przez użytkownika lub jeżeli <parameter>arg_num</parameter> jest większa od
   rzeczywistej liczby przekazanych parametrów.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>func_get_arg</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
     $numargs = func_num_args();
     echo "Liczba argumentów: $numargs\n";
     if ($numargs >= 2) {
         echo "Drugi argument: " . func_get_arg(1) . "\n";
     }
}

foo(1, 2, 3);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Liczba argumentów: 3
Drugi argument: 2
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Przykład <function>func_get_arg</function> przed i po PHP 5.3</title>
    <programlisting role="php">
<![CDATA[
test.php
<?php
function foo() {
    include './fga.inc';
}

foo('Pierwszy argument', 'Drugi argument');
?>

fga.inc
<?php

$arg = func_get_arg(1);
var_export($arg);

?>
]]>
    </programlisting>
    <para>
     Wynik przed PHP 5.3:
    </para>
    <screen>
<![CDATA[
'Drugi argument'
]]>
    </screen>
    <para>
     Wynik w PHP 5.3 i późniejszych:
    </para>
    <screen>
<![CDATA[
Warning: func_get_arg():  Called from the global scope - no function
context in /home/torben/Desktop/code/ml/fga.inc on line 3
false
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title>Przykład <function>func_get_arg</function> z argumentami przez referencję</title>
    <programlisting role="php">
<![CDATA[
<?php
function byVal($arg) {
    echo 'Przekazno     : ', var_export(func_get_arg(0)), PHP_EOL;
    $arg = 'baz';
    echo 'Po zmianie    : ', var_export(func_get_arg(0)), PHP_EOL;
}

function byRef(&$arg) {
    echo 'Przekazano     : ', var_export(func_get_arg(0)), PHP_EOL;
    $arg = 'baz';
    echo 'Po zmianie     : ', var_export(func_get_arg(0)), PHP_EOL;
}

$arg = 'bar';
byVal($arg);
byRef($arg);
?>
]]>
    </programlisting>
    &example.outputs.7;
    <screen>
Przekazano     : 'bar'
Po zmianie     : 'baz'
Przekazano     : 'bar'
Po zmianie     : 'baz'
    </screen>
    &example.outputs.5;
    <screen>
Przekazano     : 'bar'
Po zmianie     : 'bar'
Przekazano     : 'bar'
Po zmianie     : 'baz'
    </screen>
   </example>
  </para>

 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.funcnoparam;
  &note.funcbyref;
  <note>
   <simpara>
    Ta funkcja zwraca tylko kopię przekzanyych argumentów i nie bierze pod
    uwagę argumentów domyślnych, które nie zostały przekazane.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Operator <link linkend="functions.variable-arg-list.new"><literal>...</literal> w PHP 5.6+</link></member>
    <member><function>func_get_args</function></member>
    <member><function>func_num_args</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
