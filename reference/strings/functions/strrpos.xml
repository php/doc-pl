<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: sMeRFx Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.strrpos" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>Znajduje pozycję ostatniego wystąpienia ciągu znaków w innym ciągu znaków</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Znajduje liczbową pozycję ostatniego wystąpienia
   <parameter>needle</parameter> w ciągu znaków <parameter>haystack</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       Ciąg znaków do przeszukania.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       Ciąg znaków którego szukamy.
      </para>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Przesunięcie. Jeżeli zero lub dodatni, szukanie odbywa się od lewej do prawej z pominięciem
       tylu pierwszych bajtów ciągu <parameter>haystack</parameter> ile podano w
       <parameter>offset</parameter>.
      </para>
      <para>
       Jeżeli ujemny, szukanie zaczyna się od bajtu określonego parametrem <parameter>offset</parameter>
       licząc od prawej strony, zamiast od początku ciągu <parameter>haystack</parameter>.
       Wyszukiwanie odbywa się od prawej do lewej, szukane jest
       pierwsze wystąpienie <parameter>needle</parameter>.
       <note>
        <para>
         This is effectively looking for the last occurrence of
         <parameter>needle</parameter> at or before the last
         <parameter>offset</parameter> bytes.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca pozycję, na której istnieje szukany ciąg znaków, liczoną względem początku
   ciągu <parameter>haystack</parameter> (niezależnie od kierunku wyszukiwania
   lub parametru offset).
   <note>
    <simpara>
     Pozycje są liczone od 0, a nie od 1.
    </simpara>
   </note>
  </para>
  <para>
   Zwraca &false; jeśli szukany ciąg znaków nie został znaleziony.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &strings.changelog.needle-empty;
     <row>
      <entry>8.0.0</entry>
      <entry>
       Przekazanie liczby (&integer;) jako <parameter>needle</parameter> nie jest już obsługiwane.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       Przekazanie liczby (&integer;) jako <parameter>needle</parameter> jest przestarzałe.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia</title>
    <para>
     Łatwo o pomylenie wartości zwracanych dla znaku znalezionego na
     pozycji 0 z tymi, gdy znak nie został znaleziony. Zobacz jak wykryć
     tę różnicę:
    </para>
    <programlisting role="php">
     <![CDATA[
<?php
$mystring = 'Elephpant';

$pos = strrpos($mystring, "b");
if ($pos === false) { // zwróć uwagę na trzy znaki równości
    // nie znaleziono...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Szukanie z przesunięciem (offset)</title>
    <programlisting role="php">
     <![CDATA[
<?php
$foo = "0123456789a123456789b123456789c";

// Szukam '0' od zerowego bajtu (od początku)
var_dump(strrpos($foo, '0', 0));

// Szukam '0' od pierwszego bajtu (po bajcie "0")
var_dump(strrpos($foo, '0', 1));

// Szukam '7' od 21 bajtu (po bajcie 20)
var_dump(strrpos($foo, '7', 20));

// Szukam '7' od 29 bajtu (po bajcie 28)
var_dump(strrpos($foo, '7', 28));

// Szukam '7' od prawej do lewej od piątego bajtu od końca
var_dump(strrpos($foo, '7', -5));

// Szukam 'c' od prawej do lewej od drugiego bajtu od końca
var_dump(strrpos($foo, 'c', -2));

// Szukam '9c' od prawej do lewej od drugiego bajtu od końca
var_dump(strrpos($foo, '9c', -2));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
     <![CDATA[
int(0)
bool(false)
int(27)
bool(false)
int(17)
bool(false)
int(29)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>stripos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
