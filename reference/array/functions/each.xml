<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2e60c5134e7a847c99f81eb3f7ecee1f5efeeace Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: sobak -->
<refentry xml:id="function.each" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>each</refname>
  <refpurpose>Zwraca bieżącą parę klucza i wartości z tablicy i przesuwa kursor tablicy</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-7-2-0.removed-8-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>each</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Zwraca bieżącą parę klucza i wartości z tablicy i przesuwa kursor tablicy.
  </para>
  <para>
   Po wywołaniu <function>each</function> kursor tablicy znajdzie
   się na następnym elemencie tablicy lub poza ostatnim
   elementem, jeśli został osiągnięty koniec tablicy. Należy użyć
   <function>reset</function> jeśli chcemy przejść po tablicy
   raz jeszcze używając each.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Tablica wejściowa.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca bieżącą parę klucza i wartości z tablicy
   <parameter>array</parameter>. Para ta jest zwracana jako czteroelementowa
   tablica, z kluczami <literal>0</literal>, <literal>1</literal>,
   <literal>key</literal> i <literal>value</literal>. Elementy 
   <literal>0</literal> i <literal>key</literal> zawierają nazwę klucza 
   elementu tablicy, a <literal>1</literal> i <literal>value</literal>
   zawierają wartość elementu tablicy.
  </para>
  <para>
   Jeśli wewnętrzny wskaźnik tablicy wskazuje na miejsce poza końcem
   zawartości tablicy, <function>each</function> zwraca 
   &false;.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykłady użycia <function>each</function></title>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     Zmienna <varname>$bar</varname> zawiera teraz następujące pary klucz/wartość:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => bob
    [value] => bob
    [0] => 0
    [key] => 0
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <informalexample>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$foo = array("Robert" => "Bob", "Seppo" => "Sepi");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     Zmienna <varname>$bar</varname> zawiera teraz następujące pary klucz/wartość:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => Bob
    [value] => Bob
    [0] => Robert
    [key] => Robert
)
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   <function>each</function> jest zazwyczaj używana w połączeniu z
   <function>list</function> aby przejść przez tablicę. Oto przykład takiego
   zastosowania:
   <example>
    <title>Przechodzenie przez tablicę korzystając z funkcji <function>each</function></title>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$fruit = array('a' => 'apple', 'b' => 'banana', 'c' => 'cranberry');

reset($fruit);
while (list($key, $val) = each($fruit)) {
    echo "$key => $val\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
a => apple
b => banana
c => cranberry
]]>
    </screen>
   </example>
  </para>
  <caution>
   <para>
    Jako że przypisywanie tablicy do innej zmiennej zeruje wskaźnik
    tablicy, powyższy przykład wszedłby w nieskończoną pętlę, jeśli 
    tablica <varname>$fruit</varname> zostałaby przypisana do innej zmiennej
    wewnątrz pętli.
   </para>
  </caution>
  <warning>
   <para>
    <function>each</function> przyjmuje także obiekty, ale może zwrócić nieoczekiwane
    wyniki. W związku z tym nie zaleca się iterowania po obiektach przy użyciu
    <function>each</function>.
   </para>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>key</function></member>
    <member><function>list</function></member>
    <member><function>current</function></member>
    <member><function>reset</function></member>
    <member><function>next</function></member>
    <member><function>prev</function></member>
    <member>&foreach;</member>
    <member><link linkend="language.oop5.iterations">iteracja po obiektach</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
