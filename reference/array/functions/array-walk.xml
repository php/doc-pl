<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: d45ff7a3e78243470d1b7e5141d7ded022286d7f Maintainer: cyb0org Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: leszek, sobak, grzesiek -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Stosuje funkcję użytkownika do każdego elementu tablicy</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Wykonuje zdefiniowaną przez użytkownika funkcję <parameter>callback</parameter> na każdym
   elemencie tablicy <parameter>array</parameter>.
  </simpara>
  <para>
   Na działanie <function>array_walk</function> nie wpływa pozycja wewnętrznego wskaźnika
   tablicy <parameter>array</parameter>. <function>array_walk</function>
   przetworzy wszystkie elementy tablicy niezależnie od pozycji tego wskaźnika.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Tablica wejściowa.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Zazwyczaj <parameter>callback</parameter> przyjmuje dwa parametry.
       Pierwszym jest element tablicy <parameter>array</parameter>,
       natomiast drugim klucz lub numer indeksu tego elementu.
      </para>
      <note>
       <para>
        Jeśli <parameter>callback</parameter> ma zmieniać wartości tablicy,
        należy określić pierwszy parametr <parameter>callback</parameter>
        jako <link linkend="language.references">referencję</link>. W tym
        przypadku wszystkie zmiany dokonane przez tą funkcję będą dokonywane
        bezpośrednio na oryginalnej tablicy.
       </para>
      </note>
      <note>
        <para>
          Wiele wewnętrznych funkcji (na przykład <function>strtolower</function>)
          wygeneruje ostrzeżenie, jeśli przekazanych zostanie więcej argumentów
          niż oczekiwano i nie nadają się do użycia bezpośrednio jako
          <parameter>callback</parameter>.
        </para>
      </note>
      <para>
       Tylko wartości tablicy <parameter>array</parameter> mogą być
       zmieniane; jej struktura nie może modyfikowana, czyli np. programista nie może
       dodać, usunąć lub zmieniać kolejności elementów. Jeśli funkcja zwrotna nie
       respektuje tych wymogów, to jej zachowanie będzie nieokreślone
       i nieprzewidywalne.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg</parameter></term>
     <listitem>
      <para>
       Jeśli podany zostanie opcjonalny parametr <parameter>arg</parameter>,
       to zostanie on przekazany jako trzeci parametr do
       <parameter>callback</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca &true;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Od PHP 7.1.0 wygenerowany zostanie <classname>ArgumentCountError</classname> jeśli funkcja <parameter>callback</parameter>
   wymaga więcej niż 2 parametry (wartość i klucz tablicy)
   lub więcej niż 3 parametry jeśli zostały przekazane również <parameter>arg</parameter>.
   Poprzednio w tym wypadku
   zostałby wygenerowany błąd poziomu <link linkend="errorfunc.constants">E_WARNING</link> za każdym razem kiedy
   <function>array_walk</function> wywoływałby <parameter>callback</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Jeśli <parameter>callback</parameter> oczekuje drugiego lub trzeciego parametru przekazanego
       przez referencję, wówczas ta funkcja wyemituje błąd <constant>E_WARNING</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>array_walk</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array ("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");

function test_alter(&$element1, $key, $prefiks)
{
    $element1 = "$prefiks: $element1";
}

function test_print($element2, $key)
{
    echo "$key. $element2\n";
}

echo "Przed ...:\n";
array_walk ($fruits, 'test_print');

array_walk ($fruits, 'test_alter', 'fruit');
echo "... i po:\n";

array_walk ($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Przed ...:
d. lemon
a. orange
b. banana
c. apple
... i po:
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
]]>
    </screen>
   </example>
  </para>
<para>
   <example>
    <title><function>array_walk</function> przykład z użyciem funkcji anonimowej</title>
    <programlisting role="php">
<![CDATA[
<?php
$elements = ['a', 'b', 'c'];

array_walk($elements, function ($value, $key) {
  echo "{$key} => {$value}\n";
});

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
0 => a
1 => b
2 => c
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
