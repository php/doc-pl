<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8cdc6621f9826d04abc3e50438c010804d7e8683 Maintainer: grzesiek Status: ready -->
<!-- $Revision$ -->

<chapter xml:id="datetime.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;

 <section xml:id="datetime.examples-arithmetic">
  <title>Arytmetyka daty/czasu</title>
  <para>
   Poniższe przykłady pokazują niektóre pułapki arytmetyki daty i czasu w odniesieniu
   do przejść DST (czas letni) i miesięcy o różnej liczbie dni.
  </para>
  <para>
   <example>
    <title>DateTimeImmutable::add/sub dodaje interwały obejmujące czas, który upłynął</title>
    <simpara>
        Dodanie PT24H do przejścia DST spowoduje dodanie 23/25 godzin (dla większości
        stref czasowych).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
$dt = new DateTimeImmutable("2015-11-01 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->add(new DateInterval("PT3H"));
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Początek: 2015-11-01 00:00:00 -04:00
Koniec:   2015-11-01 02:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>DateTimeImmutable::modify and strtotime zwiększają lub zmniejszają poszczególne wartości składowe</title>
    <simpara>
     Dodanie +24 godzin do czasu przejścia na czas letni (DST) spowoduje dodanie
     dokładnie 24 godzin widocznych w ciągu daty/godziny (chyba, że czas
     początkowy lub końcowy znajduje się w punkcie przejścia).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
$dt = new DateTimeImmutable("2015-11-01 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+24 hours");
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Początek: 2015-11-01 00:00:00 -04:00
Koniec:   2015-11-02 00:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Dodawanie lub odejmowanie czasów może spowodować przepełnienie lub niedopełnienie dat</title>
    <simpara>
     Na przykład, gdy 31 stycznia + 1 miesiąc spowoduje 2 marca (rok przestępny)
     lub 3 marca (normalny rok).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
echo "Rok normalny:\n"; // February has 28 days
$dt = new DateTimeImmutable("2015-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+1 month");
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;

echo "Rok przestępny:\n"; // February has 29 days
$dt = new DateTimeImmutable("2016-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+1 month");
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Rok normalny:
Początek: 2015-01-31 00:00:00 -05:00
Koniec:   2015-03-03 00:00:00 -05:00
Rok przestępny:
Początek: 2016-01-31 00:00:00 -05:00
Koniec:   2016-03-02 00:00:00 -05:00
]]>
    </screen>
    <simpara>
     Aby uzyskać ostatni dzień następnego miesiąca (tj. aby zapobiec przepełnieniu)
     dostępny jest format <literal>last day of</literal>.
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
echo "Normalny rok:\n"; // Luty ma 28 dni
$dt = new DateTimeImmutable("2015-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("last day of next month");
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;

echo "Rok przestęny:\n"; // Luty 29 dni
$dt = new DateTimeImmutable("2016-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Początek: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("last day of next month");
echo "Koniec:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Normalny rok:
Początek: 2015-01-31 00:00:00 -05:00
Koniec:   2015-02-28 00:00:00 -05:00
Rok przestępny:
Początek: 2016-01-31 00:00:00 -05:00
Koniec:   2016-02-29 00:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
