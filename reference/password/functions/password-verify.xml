<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5baba54a67be43d689970983cfc6d24debad1ce0 Maintainer: sobak Status: ready -->
<refentry xml:id="function.password-verify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>password_verify</refname>
  <refpurpose>Sprawdza czy hasło pasuje do hasha</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>password_verify</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>hash</parameter></methodparam>
  </methodsynopsis>
  <para>
   Weryfikuje czy podany hash pasuje do podanego hasła.
   <function>password_verify</function> jest kompatybilna z <function>crypt</function>.
   Dzięki temu hashe utworzone przez <function>crypt</function> mogą być użyte z
   <function>password_verify</function>.

  </para>
  <para>
   Zauważ że <function>password_hash</function> zwraca algorytm, koszt i sól jako
   część hasha. Dlatego też wszystkie informacje potrzebne do weryfikacji hasha są
   zawarte w nim samym. Pozwala to użycie na tej funkcji bez konieczności
   trzymania soli lub informacji o algorytmie osobno.
  </para>
  <para>
   Ta funkcja jest zabezpieczona przed atakami czasowymi.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>hasło</parameter></term>
    <listitem>
     <para>
      &password.parameter.password;
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>hash</parameter></term>
    <listitem>
     <para>
      &password.parameter.hash;
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca &true; jeżeli hash i hasło pasują lub &false; w przeciwnym wypadku.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>password_verify</function></title>
    <para>
     Jest to uproszczony przykład; zaleca się aby przehashować poprawne hasło,
     jeśli jest to konieczne; zobacz funkcję <function>password_needs_rehash</function>, aby zobaczyć przykład.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Zobacz przykład password_hash(), aby wiedzieć skąd to pochodzi
$hash = '$2y$12$4Umg0rCJwMswRw/l.SwHvuQV01coP0eWmGzd61QH2RvAOMANUBGC.';

if (password_verify('rasmuslerdorf', $hash)) {
    echo 'Hasło jest poprawne!';
} else {
    echo 'Niepoprawne hasło.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Hasło jest poprawne!
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>password_needs_rehash</function></member>
    <member><function>password_hash</function></member>
    <member><function>sodium_crypto_pwhash_str_verify</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
